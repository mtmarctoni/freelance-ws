---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Dashboard - Marc Toni Mas">
  <div class="min-h-screen bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex justify-between h-16">
          <div class="flex items-center">
            <a href="/" class="text-xl font-bold text-gray-900">Marc Toni Mas</a>
          </div>
          <div class="flex items-center space-x-4">
            <span id="user-email" class="text-gray-700"></span>
            <button id="logout-button" class="bg-red-600 text-white px-4 py-2 rounded-lg hover:bg-red-700 transition-colors">
              Sign Out
            </button>
          </div>
        </div>
      </div>
    </nav>

    <!-- Main Content -->
    <div class="max-w-7xl mx-auto py-6 sm:px-6 lg:px-8">
      <!-- Welcome Section -->
      <div class="px-4 py-6 sm:px-0">
        <div class="bg-white overflow-hidden shadow rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <h1 class="text-2xl font-bold text-gray-900 mb-4">Welcome to your Dashboard</h1>
            <p class="text-gray-600 mb-6">Manage your projects and access our services.</p>
            
            <!-- Quick Actions -->
            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mb-8">
              <div class="bg-primary-50 p-6 rounded-lg">
                <h3 class="text-lg font-semibold text-primary-900 mb-2">Website Strategy Consultation</h3>
                <p class="text-primary-700 mb-4">Get expert guidance on your web project before you invest.</p>
                <button id="buy-consultation" class="bg-primary-600 text-white px-4 py-2 rounded-lg hover:bg-primary-700 transition-colors">
                  Book Consultation - €97
                </button>
              </div>
              
              <div class="bg-gray-50 p-6 rounded-lg">
                <h3 class="text-lg font-semibold text-gray-900 mb-2">Start a Project</h3>
                <p class="text-gray-600 mb-4">Ready to begin your web development project?</p>
                <a href="#contact" class="bg-secondary-600 text-white px-4 py-2 rounded-lg hover:bg-secondary-700 transition-colors inline-block">
                  Contact Me
                </a>
              </div>
              
              <div class="bg-accent-50 p-6 rounded-lg">
                <h3 class="text-lg font-semibold text-accent-900 mb-2">View Portfolio</h3>
                <p class="text-accent-700 mb-4">Check out my latest projects and case studies.</p>
                <a href="/#portfolio" class="bg-accent-600 text-white px-4 py-2 rounded-lg hover:bg-accent-700 transition-colors inline-block">
                  View Work
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Subscription Status -->
      <div class="px-4 py-6 sm:px-0">
        <div class="bg-white overflow-hidden shadow rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <h2 class="text-lg font-medium text-gray-900 mb-4">Account Status</h2>
            <div id="subscription-status" class="space-y-4">
              <div class="flex items-center">
                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600"></div>
                <span class="ml-2 text-gray-600">Loading account information...</span>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Order History -->
      <div class="px-4 py-6 sm:px-0">
        <div class="bg-white overflow-hidden shadow rounded-lg">
          <div class="px-4 py-5 sm:p-6">
            <h2 class="text-lg font-medium text-gray-900 mb-4">Order History</h2>
            <div id="order-history" class="space-y-4">
              <div class="flex items-center">
                <div class="animate-spin rounded-full h-4 w-4 border-b-2 border-primary-600"></div>
                <span class="ml-2 text-gray-600">Loading order history...</span>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Loading Modal -->
  <div id="loading-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden items-center justify-center z-50">
    <div class="bg-white p-6 rounded-lg shadow-xl">
      <div class="flex items-center">
        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-primary-600"></div>
        <span class="ml-3 text-lg">Processing your request...</span>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { createClient } from '@supabase/supabase-js';
  import { stripeProducts } from '../stripe-config';

  const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
  const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
  const supabase = createClient(supabaseUrl, supabaseAnonKey);

  let currentUser: any = null;

  // Check authentication on page load
  async function checkAuth() {
    const { data: { user }, error } = await supabase.auth.getUser();
    
    if (error || !user) {
      window.location.href = '/login';
      return;
    }

    currentUser = user;
    document.getElementById('user-email')!.textContent = user.email || '';
    
    // Load user data
    await Promise.all([
      loadSubscriptionStatus(),
      loadOrderHistory()
    ]);
  }

  // Load subscription status
  async function loadSubscriptionStatus() {
    try {
      const { data, error } = await supabase
        .from('stripe_user_subscriptions')
        .select('*')
        .maybeSingle();

      const statusDiv = document.getElementById('subscription-status')!;
      
      if (error) {
        statusDiv.innerHTML = `
          <div class="text-red-600">
            <p>Error loading subscription status</p>
          </div>
        `;
        return;
      }

      if (!data || !data.subscription_status || data.subscription_status === 'not_started') {
        statusDiv.innerHTML = `
          <div class="flex items-center justify-between p-4 bg-gray-50 rounded-lg">
            <div>
              <p class="font-medium text-gray-900">No Active Subscription</p>
              <p class="text-sm text-gray-600">You don't have any active subscriptions</p>
            </div>
            <span class="px-3 py-1 text-xs font-medium bg-gray-200 text-gray-800 rounded-full">Free</span>
          </div>
        `;
      } else {
        const statusColor = data.subscription_status === 'active' ? 'green' : 
                           data.subscription_status === 'past_due' ? 'yellow' : 'red';
        
        statusDiv.innerHTML = `
          <div class="flex items-center justify-between p-4 bg-${statusColor}-50 rounded-lg">
            <div>
              <p class="font-medium text-${statusColor}-900">Subscription Active</p>
              <p class="text-sm text-${statusColor}-700">Status: ${data.subscription_status}</p>
              ${data.current_period_end ? `<p class="text-xs text-${statusColor}-600">Next billing: ${new Date(data.current_period_end * 1000).toLocaleDateString()}</p>` : ''}
            </div>
            <span class="px-3 py-1 text-xs font-medium bg-${statusColor}-200 text-${statusColor}-800 rounded-full">${data.subscription_status}</span>
          </div>
        `;
      }
    } catch (error) {
      console.error('Error loading subscription:', error);
      document.getElementById('subscription-status')!.innerHTML = `
        <div class="text-red-600">
          <p>Error loading subscription status</p>
        </div>
      `;
    }
  }

  // Load order history
  async function loadOrderHistory() {
    try {
      const { data, error } = await supabase
        .from('stripe_user_orders')
        .select('*')
        .order('order_date', { ascending: false });

      const historyDiv = document.getElementById('order-history')!;
      
      if (error) {
        historyDiv.innerHTML = `
          <div class="text-red-600">
            <p>Error loading order history</p>
          </div>
        `;
        return;
      }

      if (!data || data.length === 0) {
        historyDiv.innerHTML = `
          <div class="text-center py-8 text-gray-500">
            <p>No orders found</p>
            <p class="text-sm">Your purchase history will appear here</p>
          </div>
        `;
      } else {
        historyDiv.innerHTML = data.map(order => `
          <div class="flex items-center justify-between p-4 border border-gray-200 rounded-lg">
            <div>
              <p class="font-medium text-gray-900">Order #${order.order_id}</p>
              <p class="text-sm text-gray-600">${new Date(order.order_date).toLocaleDateString()}</p>
              <p class="text-xs text-gray-500">Payment: ${order.payment_status}</p>
            </div>
            <div class="text-right">
              <p class="font-medium text-gray-900">€${(order.amount_total / 100).toFixed(2)}</p>
              <span class="px-2 py-1 text-xs font-medium bg-green-100 text-green-800 rounded-full">${order.order_status}</span>
            </div>
          </div>
        `).join('');
      }
    } catch (error) {
      console.error('Error loading orders:', error);
      document.getElementById('order-history')!.innerHTML = `
        <div class="text-red-600">
          <p>Error loading order history</p>
        </div>
      `;
    }
  }

  // Handle consultation purchase
  async function handleConsultationPurchase() {
    if (!currentUser) return;

    const loadingModal = document.getElementById('loading-modal')!;
    loadingModal.classList.remove('hidden');
    loadingModal.classList.add('flex');

    try {
      const consultationProduct = stripeProducts.find(p => p.name === 'Website Strategy Consultation');
      if (!consultationProduct) {
        throw new Error('Product not found');
      }

      const { data: { session } } = await supabase.auth.getSession();
      if (!session) {
        throw new Error('No session found');
      }

      const response = await fetch(`${supabaseUrl}/functions/v1/stripe-checkout`, {
        method: 'POST',
        headers: {
          'Authorization': `Bearer ${session.access_token}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          price_id: consultationProduct.priceId,
          mode: consultationProduct.mode,
          success_url: `${window.location.origin}/success?session_id={CHECKOUT_SESSION_ID}`,
          cancel_url: `${window.location.origin}/dashboard`,
        }),
      });

      if (!response.ok) {
        const errorData = await response.json();
        throw new Error(errorData.error || 'Failed to create checkout session');
      }

      const { url } = await response.json();
      window.location.href = url;
    } catch (error: any) {
      console.error('Error creating checkout session:', error);
      alert('Error: ' + error.message);
    } finally {
      loadingModal.classList.add('hidden');
      loadingModal.classList.remove('flex');
    }
  }

  // Handle logout
  async function handleLogout() {
    await supabase.auth.signOut();
    window.location.href = '/';
  }

  // Event listeners
  document.getElementById('logout-button')?.addEventListener('click', handleLogout);
  document.getElementById('buy-consultation')?.addEventListener('click', handleConsultationPurchase);

  // Initialize
  checkAuth();
</script>