---
// Signup form component
---

<div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
  <div class="max-w-md w-full space-y-8">
    <div>
      <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
        Create your account
      </h2>
      <p class="mt-2 text-center text-sm text-gray-600">
        Or
        <a href="/login" class="font-medium text-primary-600 hover:text-primary-500">
          sign in to your existing account
        </a>
      </p>
    </div>
    
    <form id="signup-form" class="mt-8 space-y-6">
      <div class="rounded-md shadow-sm -space-y-px">
        <div>
          <label for="email" class="sr-only">Email address</label>
          <input 
            id="email" 
            name="email" 
            type="email" 
            autocomplete="email" 
            required 
            class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm" 
            placeholder="Email address"
          />
        </div>
        <div>
          <label for="password" class="sr-only">Password</label>
          <input 
            id="password" 
            name="password" 
            type="password" 
            autocomplete="new-password" 
            required 
            minlength="6"
            class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm" 
            placeholder="Password (min. 6 characters)"
          />
        </div>
      </div>

      <div id="error-message" class="hidden bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded"></div>
      <div id="success-message" class="hidden bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded"></div>

      <div>
        <button 
          type="submit" 
          id="signup-button"
          class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Create account
        </button>
      </div>
    </form>
  </div>
</div>

<script>
  import { createClient } from '@supabase/supabase-js';

  const supabaseUrl = import.meta.env.PUBLIC_SUPABASE_URL;
  const supabaseAnonKey = import.meta.env.PUBLIC_SUPABASE_ANON_KEY;
  const supabase = createClient(supabaseUrl, supabaseAnonKey);

  const form = document.getElementById('signup-form') as HTMLFormElement;
  const button = document.getElementById('signup-button') as HTMLButtonElement;
  const errorMessage = document.getElementById('error-message') as HTMLDivElement;
  const successMessage = document.getElementById('success-message') as HTMLDivElement;

  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(form);
    const email = formData.get('email') as string;
    const password = formData.get('password') as string;

    button.disabled = true;
    button.textContent = 'Creating account...';
    errorMessage.classList.add('hidden');
    successMessage.classList.add('hidden');

    try {
      const { data, error } = await supabase.auth.signUp({
        email,
        password,
        options: {
          emailRedirectTo: `${window.location.origin}/dashboard`
        }
      });

      if (error) {
        throw error;
      }

      // Since email confirmation is disabled, user should be signed in immediately
      if (data.user && data.session) {
        successMessage.textContent = 'Account created successfully! Redirecting...';
        successMessage.classList.remove('hidden');
        
        setTimeout(() => {
          window.location.href = '/dashboard';
        }, 1000);
      } else {
        successMessage.textContent = 'Account created! Please check your email to confirm your account.';
        successMessage.classList.remove('hidden');
      }
    } catch (error: any) {
      errorMessage.textContent = error.message || 'An error occurred during sign up';
      errorMessage.classList.remove('hidden');
    } finally {
      button.disabled = false;
      button.textContent = 'Create account';
    }
  });
</script>